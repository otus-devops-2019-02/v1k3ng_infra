dist: trusty
sudo: required
language: bash
before_install:
- curl https://raw.githubusercontent.com/express42/otus-homeworks/2019-02/run.sh | bash
script:
  # - git clone git@github.com:otus-devops-2019-02/v1k3ng_infra.git
  # - docker exec hw-test bash -c 'curl https://raw.githubusercontent.com/otus-devops-2019-02/v1k3ng_infra/ansible-3/my_travis_test.sh | bash'
  # - docker exec -e USER=appuser hw-test ls -l
  # - docker exec -e USER=appuser hw-test head README.md
  - docker exec -e USER=appuser hw-test bash -c 'ssh-keygen -q -f ~/.ssh/appuser'
  - echo "packer validate"
  - docker exec -e USER=appuser hw-test bash -c 'cp packer/variables.json.example packer/variables.json'  
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/app.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/db.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/immutable.json'
  - docker exec -e USER=appuser hw-test bash -c 'packer validate -var-file=packer/variables.json packer/ubuntu16.json'
  - echo "terraform validate"
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/terraform.tfvars.example terraform/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/prod/terraform.tfvars.example terraform/prod/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'cp terraform/stage/terraform.tfvars.example terraform/stage/terraform.tfvars'
  - docker exec -e USER=appuser hw-test bash -c 'touch terraform/stage/terraform.tfstate'
  - docker exec -e USER=appuser hw-test bash -c 'touch terraform/prod/terraform.tfstate'
  - docker exec -e USER=appuser hw-test bash -c 'rm -rf terraform/stage/backend.tf'
  - docker exec -e USER=appuser hw-test bash -c 'rm -rf terraform/prod/backend.tf'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && terraform validate'
  # - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform get'

  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && terraform validate'
  # - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform get'

  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform init'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && terraform validate'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/ && tflint'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/stage/ && tflint'
  - docker exec -e USER=appuser hw-test bash -c 'cd terraform/prod/ && tflint'
  - echo "ansible-lint"  
  - docker exec -e USER=appuser hw-test bash -c 'cd ansible/playbooks && ansible-lint ./*'
  - docker exec -e USER=appuser hw-test bash -c 'ls -la ~/.ssh/'
notifications:
  slack:
    rooms:
      secure: O8MMzFleAesgBAh+A1ZTmMMjwB4YmsaR+CKdesa4+lKdhebkPCave/RZo7N7GthL56TO8NyGZgJhsWJF8GRtVO4Rww2OxOGkdA2LoLCzwp8UgDp8rtYYzwf/FjoyI83gt1JVbL8tf88JbuAlt6WU/sLvDK6zf7ZfeoPe0Bn7DwkZOZUzjpDBs6Ph+A0dL3i4QuOk0NE22XdM5q5lbWi44QAwu85YUId1jOJfxv0dBfg/EYM3XTC+egn778h7inHuwjUfGEcgncSIGrRyvZvCCENDk1z+IrF1HFC8Ck0xtnY2EGud4EpYK3nRwTXjQcBxxstGWV2yZCU9aiY08ERl9rw3QR9+2ubycWZhmfEt5xLcPRX2c7diewZHw9Fd1H/0yGavd6FujQxkhtOmFnQJA9TfwwJngRg8TAYsplzYlRT3R+wOUXTOjH735GJze+tKK0RZGEknwippxr4FPzlIvY6kUwbyjnUqUCFVOXKNJH6ugbhvTNaR4Rg7ivtladFFGwPsQKv3ay+XesXaL1E4JlXQE2Hdh8NXOf3BurWUDFpn/r+EiK/1qcV1Y5xYi3whdQNTmVetUAE9WDVAvwJRZS0PlKx/q6lc7G1jEhN1qx0MnwN7w3LGpKzYsm0OOdtmTQvNbW26M9EMHbKx4Ek+6WAXv1bsCJjGoQYlpv4K34g=
